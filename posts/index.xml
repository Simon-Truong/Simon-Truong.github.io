<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Simon's Blog</title><link>https://simon-truong.github.io/posts/</link><description>Recent content in Posts on Simon's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><copyright>Simon Truong</copyright><lastBuildDate>Thu, 17 Jun 2021 20:43:12 +1000</lastBuildDate><atom:link href="https://simon-truong.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>SPA vs SSR vs SSG</title><link>https://simon-truong.github.io/posts/spa-vs-ssr-vs-ssg/</link><pubDate>Thu, 17 Jun 2021 20:43:12 +1000</pubDate><guid>https://simon-truong.github.io/posts/spa-vs-ssr-vs-ssg/</guid><description>When a user visits a web application or website, a view is generated and presented to them. Have you ever wondered who is rendering that view?
CSR (Client Side Rendering), SSR (Server Sided Rendering) and SSG (Static Site Generators) are rendering methods that a developer should be aware of. Today, we will go through the differences, advantages and disadvantages of these rendering approaches.
Client Side Rendering In CSR, the client (browser) is responsible for rendering the view.</description></item><item><title>Understanding async &amp; defer script tags</title><link>https://simon-truong.github.io/posts/understanding-async-defer-scripts/</link><pubDate>Sat, 29 May 2021 08:16:08 +1000</pubDate><guid>https://simon-truong.github.io/posts/understanding-async-defer-scripts/</guid><description>There are two script tag attributes that we should be aware of: async &amp;amp; defer. Understanding the behavioural differences can make our code more performant.
async The async attribute denotes that the script will be fetched asynchronously and executed when the download is completed. This behaviour is ideal if the executing script has no dependencies and it itself is not a dependency.
&amp;lt;script src=&amp;quot;index.js&amp;quot; async&amp;gt;&amp;lt;/script&amp;gt;
defer The defer attribute specifies that the script will be fetched asynchronously and executed once the HTML parsing is complete.</description></item><item><title>What is a RESTful Api</title><link>https://simon-truong.github.io/posts/understanding-restful-api/</link><pubDate>Fri, 28 May 2021 18:24:28 +1000</pubDate><guid>https://simon-truong.github.io/posts/understanding-restful-api/</guid><description>To understand RESTful, we need to understand the basic concepts of an API (Application Programming Interface) and HTTP (Hypertext Transfer Protocol).
API An API is essentially the middle man between a client and the data they wish to acquire. The API is able to interpret the client&amp;rsquo;s request and handles all the necessary actions such as computation or querying a database, and produces a response that the client consumes.
HTTP HTTP is a protocol that the internet uses to enable communication between a client and a server.</description></item></channel></rss>